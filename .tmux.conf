# オプション設定{{{
# set-option        = alias: set
# set-window-option = alias: setw

# utf-8を有効にする
setw -g utf8 on

# ウィンドウ名の自動変更を無効に
setw -g automatic-rename off


# メッセージ表示時間(既定値は1000?)
set -g display-time 3500

# ESC キーの遅延を短くする(tmux上のvim対策)
set -sg escape-time 0

#}}}

# キーバインド{{{
# bind-key   = alias: bind
# unbind-key = alias: unbind

# C-t を prefix キーにする
unbind C-b
set -g prefix C-t
bind C-t send-prefix

# prefix + C-d でデタッチ
unbind C-d
bind C-d detach

# prefix + C-r でクライアントを更新する
bind r   source-file ~/.tmux.conf\; display-message "[tmux] $HOME/.tmux.conf reloaded!"
bind C-r source-file ~/.tmux.conf\; display-message "[tmux] $HOME/.tmux.conf reloaded!"

## Clients {{{

# prefix + * で全セッション表示
bind * list-clients

# }}}

## Window {{{

# ウィンドウの開始番号
set -g base-index 1

# prefix + | で縦分割 prefix + - で横分割
bind | split-window -h
bind - split-window -v

# 既定の割り当てとして「prefix + c」でウィンドウが作成できるが
# prefix + C-cでも作成できるようにする
unbind C-c
bind C-c new-window -n zsh
bind c new-window -n zsh

# prefix + Ctrl-h/l でウィンドウ切り替え
# prefix + Ctrl-h,h,h,h,...と連打できる
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# prefix + C-n | n で次のウィンドウ
bind C-n next-window
bind n next-window

# prefix + C-p | p で次のウィンドウ
bind C-p previous-window
bind p previous-window

# prefix + C-a で先ほどアクティブだったウィンドウを表示
unbind C-a
bind C-a last-window

# prefix + C-w でウィンドウを対話的に選択
unbind C-w
bind C-w choose-window
unbind w
bind w list-windows

# }}}

## Pane {{{

# ペインの開始番号
setw -g pane-base-index 1

# prefix + hjkl でペイン移動
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# prefix + HJKL でペインのサイズ変更
# prefix + H,H,H,H,...と連打できる
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Ctrl + O でペインのローテーション移動
bind -n C-o run "tmux select-pane -l || tmux select-pane -t :.+"

# paneの操作
bind b break-pane
bind q kill-pane
bind C-q kill-session
bind C-t run "tmux last-pane || tmux last-window || tmux new-window"
bind i display-panes

# }}}

## CopyMode {{{

# コピーモードでvi風の操作にしたい場合(既定値はemacs)
setw -g mode-keys vi

# prefix + [ でコピーモード、prefix + ] でペースト
bind v   copy-mode \; display "Copy mode!"
bind C-v copy-mode \; display "Copy mode!"
bind C-[ copy-mode \; display "Copy mode!"
bind p    paste-buffer
bind C-] paste-buffer

# コピーモード時のキーバインド
bind -t vi-copy v       begin-selection
bind -t vi-copy V       select-line
bind -t vi-copy C-v     rectangle-toggle
bind -t vi-copy Escape  clear-selection
bind -t vi-copy C-c     cancel
bind -t vi-copy w       next-word
bind -t vi-copy e       next-word-end
bind -t vi-copy b       previous-word
bind -t vi-copy g       top-line
bind -t vi-copy G       bottom-line
bind -t vi-copy /       search-forward
bind -t vi-copy ?       search-backward
bind -t vi-copy C-b     page-up
bind -t vi-copy C-f     page-down
bind -t vi-copy C-u     scroll-up
bind -t vi-copy C-d     scroll-down

# Macの場合クリップボードにコピーする。またVimとtmux間でクリップボードを共有する
bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# set -g default-command "reattach-to-user-namespace -l %SHELL"
# }}}

# prefix + \ で終了
unbind '\'
bind '\' confirm-before "kill-server"

#}}}

# COLOUR (Solarized dark){{{

# default statusbar colors
set -g status-bg black #base02
set -g status-fg yellow #yellow
set -g status-attr default

# default window title colors
setw -g window-status-fg brightblue #base0
setw -g window-status-bg default
#setw -g window-status-attr dim

# active window title colors
setw -g window-status-current-fg brightred #orange
setw -g window-status-current-bg default
#setw -g window-status-current-attr bright

# pane border
set -g pane-border-fg black #base02
set -g pane-active-border-fg brightgreen #base01

# message text
set -g message-bg black #base02
set -g message-fg brightred #orange

# pane number display
set -g display-panes-active-colour blue #blue
set -g display-panes-colour brightred #orange

# clock
setw -g clock-mode-colour green #green

# bell
# setw -g window-status-bell-style fg=black,bg=red #base02, red

#}}}

# ステータスバー{{{

# ステータスバーをトップに配置する
set -g status-position top

# 表示
set -g status-utf8 on
set -g status-interval 1
set -g status-justify centre
# ヴィジュアル通知を有効にする
setw -g monitor-activity on
set -g visual-activity on


###########################################################
# ステータス行の設定
###########################################################
# 既定の属性
# 「xxx-fg」「xxx-bg」は色、「xxx-attr」は属性
# 透明にしたい場合、端末によっては
# status-bgを「default」にすると256色パレット色の表示が部分的におかしくなる?
# 背景色は端末エミュレータの背景色に近いものを設定すると良いかも
set -g status-fg   default
set -g status-bg   colour239
set -g status-attr default

set -g status-left-fg   default
set -g status-left-bg   colour24
set -g status-left-attr default

set -g status-right-fg   colour115
set -g status-right-bg   colour22
set -g status-right-attr bold

## ウィンドウ一覧部における現在非アクティブなウィンドウの項目の表示
setw -g window-status-fg   white
setw -g window-status-bg   default
setw -g window-status-attr default

## ウィンドウ一覧部における現在アクティブなウィンドウの項目の表示
## 端末によっては256色の色を用いると正常に表示されない?
setw -g window-status-current-fg   white
setw -g window-status-current-bg   colour125
setw -g window-status-current-attr bold

## メッセージ/プロンプト
set -g message-fg   colour115
set -g message-bg   colour24
set -g message-attr bright

## スクロールの右上やコピーモード選択範囲のスタイル
setw -g mode-fg   colour146
# 256色パレットの色を付けると表示が変になる?(reverseすると回避可能?)
setw -g mode-bg   colour62
setw -g mode-attr reverse,bold


## ステータス行の書式
#  #(コマンド行)     コマンド出力の最初の行
#  #[属性]           色/属性の変更(例:#[fg=cyan,bright])
#  #H                ホスト名
#  #I                ウィンドウ番号
#  #P                ペイン番号
#  #S                セッション名
#  #T                ウィンドウタイトル
#  #W                ウィンドウ名
#  ##                「#」の文字
# コマンドは繰り返し実行される (更新頻度はstatus-intervalによる・既定値は15秒)
# 指定可能な色は
# black red green yellow blue magenta cyan white
# の他、256色パレット上のcolour0,colour1, ... colour255が利用可能
# 指定可能な属性は
#   bright(bold)[明るい(太字)], dim[暗い], underscore[下線], blink[点滅],
#   reverse[反転], hidden[非表示], italics[イタリック], default[書式のクリア]
#   (端末によっては効果がないものもある)

# ## 左ステータス(現在時刻を表示)
# ## 日付/時刻部分はstrftime()と同様の書式
# set -g status-left "#[fg=colour211,bold]%m#[default,fg=colour212]/#[fg=colour218,bold]%d #[fg=colour81]%H#[default,blink,fg=colour45]:#[default,fg=colour75,bold]%M#[default]"
# set -g status-left-length 11  # 既定値は10
set -g status-left  "#H:[#P]"
set -g status-left-length 90

# ## 右ステータス(タイトルを表示)
# set -g status-right "#T"
set -g status-right "#(tmux show-options -g prefix) [%Y-%m-%d(%a) %H:%M]"
set -g status-right-length 90

## ウィンドウマネージャ向けのタイトル
set -g set-titles on
set -g set-titles-string "[tmux]#T \"#W\"(#I/#P) @ #H"

#}}}



